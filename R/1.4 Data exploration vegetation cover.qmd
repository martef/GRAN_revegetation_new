---
title: "1.4 Data exploration vegetation cover"
author: "MarteF"
format: html
editor: visual
---

## Packages needed

```{r Packages needed, output=FALSE, warning=FALSE}
#library(easypackages)
#libraries(tidyverse)
#install.packages("readr")
library(lubridate)

```

## Uploading and cleaning the data

```{r Upload datasets, output=FALSE, warning=FALSE}

df <- readr::read_delim('C:/Users/martef/DokumenterIntern/GitHub/GRAN_revegetation_new/data/Revegetering_alldata.csv', 
                                  delim = ';',
                                  locale = locale('se', encoding = 'ISO8859-1'),
                                  col_names = FALSE)

#need to switch rows and columns
reveg = data.frame(t(df)) #Transposing
names(reveg) <- reveg[1,] #Copying header names from row 1
reveg <- reveg[-1,] #Removing row 1

#Alter various columns and data

reveg[reveg == '<1'] <- '0.1' #change all <1 to 0.1
reveg <- reveg %>% 
  rename(Location = Localition) #Fix bad spelling
reveg$Date <- as.POSIXct(dmy(reveg$Date))
reveg <- reveg %>% 
  mutate_at(c('Location', 'Sublocation', 'Block', 'Treatment'), as.factor)
reveg <- reveg %>% 
  mutate_at(c(8:37), as.numeric) #Change from character to numeric on multiple columns
reveg <- reveg %>% 
  mutate_at(c(9:36), ~replace_na(.,0)) #Replacing NAs with zeros

#Creating columns for year and month
reveg$year <-as.factor(year(reveg$Date))
reveg$month <- as.factor(month(reveg$Date))

#Create a column with treatment (C,M,S, R)
reveg <- reveg %>%
  rename(Treatment_ID =Treatment) %>%
  mutate(Treatment=case_when(Treatment_ID==c('S1','S2')~'S',
                             TRUE~Treatment_ID))
unique(reveg$Treatment)

#There still seems to be 4 rows with S1 in Treatment
reveg <- reveg%>%
  mutate(Treatment=case_when(Treatment==c('S1')~'S',
                             TRUE~Treatment))

# Change the references to be included as a type of treatment
reveg <- reveg %>%
  mutate(Treatment = case_when(
    Sublocation=="Ref1" ~ "R",
    Sublocation=="Ref2" ~ "R",
    TRUE ~ Treatment
  ))

reveg$Treatment <- as.factor(reveg$Treatment)

#Create a column with year as 0,1 and 2
reveg <- reveg %>%
  mutate(t_year = case_when(year=="2020" & Location =="HM" ~ 0,
                            year=="2021" & Location =="HM" ~ 2,
                            year=="2022" & Location =="HM" ~ 3,
                            year=="2020" & Location =="VSM"  ~ 0,
                            year=="2021" & Location =="VSM" ~ 2,
                            year=="2022" & Location =="VSM" ~ 3,
                            year=="2021" & Location =="BSM" ~ 0,
                            year=="2022" & Location =="BSM" ~ 2,
                            year=="2023" & Location =="BSM" ~ 3,
                            year=="2023" & Location =="HM" ~ 3,
                            year=="2023" & Location =="VSM" ~ 3,
    TRUE ~ NA_real_
  ))

reveg <- reveg %>% 
  relocate(c('Date', 'year', 'month', 'Location', 'Sublocation', 'Block', 'Treatment_ID', 'Treatment', 'Registered_by', 't_year')) #move new columns up front

reveg <- reveg %>% 
  mutate(Treatment=fct_relevel(Treatment,c("C","M","S","R"))) #Alter the order of the Treatments, so that the references come last
```

## Creating new columns for analysis

Create columns with changes in cover of Sphagnum from year 0 to 2 and year 2 to 3, and overall change.

```{r}
# Create columns with cover change per year and total change
reveg <- reveg %>%
  arrange(Location, Sublocation, Block, Treatment_ID, t_year) %>%
  group_by(Location, Sublocation, Block, Treatment_ID) %>%
  mutate(Change_Year = Sphagnum - lag(Sphagnum),
         Change_Total = Sphagnum - lag(Sphagnum, 2)) %>%
  ungroup()

# Set NA for the first row of each group (year 0)
reveg$Change_Year[which(reveg$t_year == min(reveg$t_year))] <- NA
reveg$Change_Total[which(reveg$t_year %in% c(min(reveg$t_year), min(reveg$t_year) + 1))] <- NA

# View the modified dataset
reveg %>% 
  head() %>%
  dplyr::select(c(t_year,year, Location, Sublocation, Block, Treatment, Treatment_ID, Sphagnum, Change_Year, Change_Total))
```

Checking the references that only have data from year 3

```{r}
reveg %>%
  filter(Treatment=="R") %>%
  dplyr::select(c(t_year,year, Location, Sublocation, Block, Treatment, Treatment_ID, Sphagnum, Change_Year, Change_Total))
```

There is only NA in the changes-columns. All good, then.

Creating a column that sums up the total cover of other plants than Sphagnum

```{r}
reveg <- reveg %>%   
  mutate(Other_veg = rowSums(select(., Polytrichum:Trees), na.rm = TRUE)) 
```

Creating a column that sums up the total cover of ALL plants including Sphagnum

```{r}
reveg <- reveg %>%   
  mutate(Total_veg = rowSums(select(., Sphagnum, Polytrichum:Trees), na.rm = TRUE))
```

Creating a column that sums up all categories in the field layer

```{r}
reveg <- reveg %>%   
  mutate(Field = rowSums(select(., Carex:Trees), na.rm = TRUE))
```

Creating a column that sums up all vegetation categories in the ground layer

```{r}
reveg <- reveg %>%   
  mutate(Veg_Ground = rowSums(select(., Sphagnum, Polytrichum, Racomitrium, Other_mosses, Livermosses, Lichen), na.rm = TRUE))
```

Creating a column that sums up all the categories in the ground layer (including other categories such as mulch, bare peat etc.)

```{r}
reveg <- reveg %>%   
  mutate(Tot_Ground = rowSums(select(., Sphagnum:Lichen, Bare_peat:Dead_wood ), na.rm = TRUE)) 
```

Tweeking the dataset to fit various types of models (binomial, beta, gamma)

```{r}
#Tweeking the dataset to fit binomial with no zeros 
reveg <- reveg %>%   
  mutate(Sphagnum_nozero=case_when(Sphagnum==0~ +0.01,                             TRUE~Sphagnum)) 

#Tweeking the dataset to fit integer requirements
reveg <- reveg %>%
  mutate(Sphagnum_int=case_when(Sphagnum==0.1~ 1,                             TRUE~Sphagnum))

#Tweeking the dataset to fit beta with no 1s
reveg <- reveg %>%
  mutate(Sphagnum_no1=case_when(Sphagnum==100~99.9,
                                TRUE~Sphagnum))
```

## Combining vegetation data with other explanatory variables

Uploading and editing dataset for climate variables (precipitation and air temperatures):

```{r, output=FALSE, warning=FALSE}
#Upload dataset for climate variables
climvar <- readr::read_delim('C:/Users/martef/DokumenterIntern/GitHub/GRAN_revegetation_new/data/clim_var.csv', 
                                  delim = ',',
                                  col_names = TRUE)

climvar <- climvar %>% 
  dplyr::select( -1) %>%
  mutate_at(c('year', 'Name'), as.factor)

```

Uploading and editing dataset for water level variables:

```{r, output=FALSE, warning=FALSE}
wtvar <- readr::read_delim('C:/Users/martef/DokumenterIntern/GitHub/GRAN_revegetation/data/WT_variables.csv', 
                                  delim = ',',
                                  col_names = TRUE)

wtvar <- wtvar %>% 
  dplyr::select( -1) %>%
  mutate(Name=case_when(Station_ID=='BSM1'~ 'Hoydalsmoan',
                         Station_ID=='BSM2'~'Hoydalsmoan',
                         Station_ID=='BSM3'~'Hoydalsmoan',
                          Station_ID=='HM1'~'Hoydalsmoan',
                          Station_ID=='HM2'~'Hoydalsmoan',
                          Station_ID=='HM3'~'Hoydalsmoan',
                          Station_ID=='VSM1'~'Vestersetermyra',
                          Station_ID=='VSM2'~'Vestersetermyra',
                                TRUE ~ NA)) %>%
  mutate_at(c('year', 'Station_ID'), as.factor)
#Created a column for weather station Name in the water table dataset
```

Joining the explanatory datasets:

```{r}
#Joining the explanatory variables datasets

all_var <- wtvar %>%
  full_join (climvar)

#There's no reason to keep 2019 in the dataset, as I didn't record vegetation that year

all_var <- all_var %>%
  filter(!year=='2019')

all_var <- all_var%>%
  relocate(Name)

# The total days with water table < -0.2m (total_days) are set to zero for those stations that didn't have any data (BSM1 in 2022, 2023, and HM2 in 2021, 2022, 2023). I need to change these to NAs
all_var <- all_var %>%
  mutate(total_days = case_when(
    is.na(consecutive_days_count) ~ NA_real_,
    TRUE ~ total_days
  ))

#Create similar columns as in reveg dataset
all_var <- all_var %>%
  separate('Station_ID', into = c('Location', 'Sublocation'), sep = "(?<=\\D)(?=\\d)|(?<=\\d)(?=\\D)", remove = FALSE)

```

Uploading nutrient dataset:

```{r, warning=FALSE, output=FALSE}
#Upload nutrient data
nut_var <- readr::read_delim('C:/Users/martef/DokumenterIntern/GitHub/GRAN_revegetation_new/data/PRS_results.csv', 
                                  delim = ';',
                                  col_names = TRUE)

nut_var$Burial_Date <- as.POSIXct(dmy(nut_var$Burial_Date))
nut_var$Retrieval_Date <- as.POSIXct(dmy(nut_var$Retrieval_Date))
nut_var$year <-as.factor(year(nut_var$Burial_Date))
nut_var <- nut_var %>% relocate(c(year))
nut_var <- nut_var %>%
  mutate(Treatment = ifelse(Treatment %in% c('SP'), 'S', Treatment)) %>%
mutate_at(c('Field','Plot','Location','Treatment'), as.factor) %>%
  rename(Sublocation=Field) %>%
  rename(Block=Plot) %>%
  dplyr::select(-c('WAL #', Sample_ID, Burial_Date, Retrieval_Date, '#Anion', '#Cation'))
```

Joining the revegetation dataset with the explanatory variables:

```{r}
#Join the revegetation dataset with the variable datasets
reveg_var <- reveg %>% full_join(nut_var, by=c('year','Location','Sublocation','Block','Treatment'))

reveg_var2 <- reveg_var %>% 
  left_join(all_var, by=c('Location', 'Sublocation', 'year'))

reveg_var2 <- reveg_var2 %>%
  mutate_at(c('Location','Sublocation'), as.factor)

reveg_var <- reveg_var2
rm(reveg_var2)       

reveg_var <- reveg_var %>%
  dplyr::select(-c(Notes.x, Notes.y))

```

## Visual inspection of data

### Sphagnum cover

```{r}
reveg_var %>%
  filter(is.na(Sphagnum))
```

There seem to be one record of nutrients that isn't connected to a treatment plot, resulting in an NA within Sphagnum cover ...

Overall Sphagnum cover changes:

```{r, warning=FALSE}
plot_SP <- reveg_var %>%
  filter(!is.na(Sphagnum)) %>%  # Exclude NA values in the Sphagnum column
  ggplot() +   
  geom_boxplot()+   
  aes(x=Treatment, y=Sphagnum, color=as.factor(t_year)) +   
   ylab("Sphagnum cover") +
  labs(color = "Growth seasons since treatment") +
  theme_bw()
plot_SP
```

The overall trends is quite clear. Sphagnum treatment increases Sphagnum cover substantially compared to mulch only and controls, even after 2 growth seasons, but especially after 3. The results looks almost similar to the references after 3 growth seasons.

```{r}
reveg_var %>%
  filter(!is.na(Sphagnum)) %>%  # Exclude NA values in the Sphagnum column
  ggplot(aes(x = Sphagnum)) +
  geom_histogram(binwidth = 0.1, fill = "blue", color = "black", alpha = 0.7) +
  labs(title = "Histogram of Sphagnum Values",
       x = "Sphagnum",
       y = "Frequency") +
  facet_wrap(~ t_year)
```

Overall Sphagnum cover changes per location:

```{r, warning=FALSE}
plot_SP_Location <- reveg_var %>%
  filter(!is.na(Sphagnum)) %>%  # Exclude NA values in the Sphagnum column
  ggplot() +   
  geom_boxplot()+   
  aes(x=Treatment, y=Sphagnum, color=as.factor(t_year)) +
  ylab("Sphagnum cover") +
  labs(color = "Growth seasons since treatment") +
  facet_wrap(Location~.) +
  theme_bw()
plot_SP_Location +  theme(legend.position="bottom")
```

There is some differences between sites. The Sphagnum treatment is clearly not as successful at the location VSM (Vestersetermyra).

```{r}
reveg_var%>%
  group_by(t_year, Treatment) %>%
  summarise(median=median(Sphagnum), 
            mean=mean(Sphagnum),
            Sph0 = sum(Sphagnum==0),
            Sph0.1= sum(Sphagnum==0.1),
            Sph1 = sum(Sphagnum==1),
            max=max(Sphagnum), total_N = n()) 
```

```{r}
reveg_var%>%
  dplyr::select(Treatment_ID, Treatment, t_year, Location, Sublocation, Block, Sphagnum, Change_Year, Change_Total) %>%
  filter(Sphagnum==0 & t_year==3 & Treatment=="S")
```

There's 1 plot from the Sphagnum treatment that had 0 Sphagnum after 3 growth seasons.

Checking which plots had a negative growth of Sphagnum:

```{r}
reveg_var%>%
  filter(!is.na(Change_Total)) %>%
    dplyr::select(Treatment_ID, t_year, Location, Sublocation, Block, Sphagnum, Change_Year, Change_Total) %>%
  filter(Change_Total<=0)%>%
  arrange(Change_Total, Treatment_ID)

```

```{r}
reveg_var %>%      
  filter(Change_Year<0 | Change_Total<0) %>%      
  dplyr::select(c(t_year, Location, Sublocation, Block, Treatment, Treatment_ID, Sphagnum, Change_Year, Change_Total))%>%      
  arrange(Change_Total)
```

23 plots had zero or negative development of Sphagnum in total throughout the period, but only 4 had a negative development in total (and then really low - only 0.1 and 0.9).

Several plots stagnated or dropped a little from 2nd to 3rd year, of these are 1 Sphagnum plot from VSM.

### Other vegetation cover

Summarising all the other interesting cover groups (Mulch, Bare_peat, Other_veg, Total_veg)

```{r}
reveg_var%>%
  dplyr::select(c(Location, Sublocation, Block, Treatment, Treatment_ID, Sphagnum, Mulch, Bare_peat, t_year, Other_veg, Total_veg, Field, Veg_Ground, Tot_Ground))%>%
  group_by(Treatment, t_year) %>%
  summarise(Sph_mean=mean(Sphagnum),
            Sph_sd= sd(Sphagnum),
            Sph_max=max(Sphagnum),
            Mulch_mean = mean(Mulch),
            Mulch_sd = sd(Mulch),
            Bare_peat_mean = mean(Bare_peat),
            Bare_peat_sd = sd(Bare_peat),
            Other_veg_mean = mean(Other_veg),
            Other_veg_sd = sd(Other_veg),
            Other_veg_max = max(Other_veg),
            Field_mean = mean(Field),
            Field_sd = sd(Field),
            Field_max = max(Field),
            Veg_Ground_mean = mean(Veg_Ground),
            Veg_Ground_sd = sd(Veg_Ground),
            Veg_Ground_max = max(Veg_Ground),
            Tot_Ground_mean = mean(Tot_Ground),
            Tot_Ground_sd = sd(Tot_Ground),
            Tot_Ground_max = max(Tot_Ground),
             total_N = n()) 
```

It seems like a few of the plots have a very high total vegetation cover. The total sum of vegetation cover comes to slightly more than 100% makes sense, since the evaluation of cover in the field layer and the ground layer may overlap, but it shouldn't become very much more, I think.

I need to take a closer look at those with total vegetation cover of more than 120%.

```{r}
reveg_var%>%
  dplyr::select(c(Location, t_year, Sublocation, Block, Treatment, Treatment_ID, Sphagnum, Other_mosses, Livermosses, Lichen, Polytrichum, Racomitrium, Trichophorum, Eriopherum, Heathers, Narthecium, Bet_nan, Other_veg, Veg_Ground, Tot_Ground, Field, Total_veg))%>%
 filter(Total_veg>120)
```

There are 21 plots that have total vegetation cover of \>120%.

Of these, 12 exceed 130% vegetation cover.

13 of the plots have \>100% ground layer cover, but only 5 have \>105%. These are the ones I should focus on, I think. Two of these actually have a vegetation ground cover \>100%, but just barely.

Most plots are from the references, where the vegetation in both ground layer and field layer is extensive.

Only two plots are from the experimental plots - HM-3-2-S2 from year3, and VSM-2-1-S2 from year 3.

First has Sphagnum=85 and Eriopherum=60, totalling Total_veg=145. That might not be unreasonable, as these may overlap.

Second has Sphagnum=75 and Eriopherum=40, totaling Total_veg=121.5, which is perfectly fine.

The total ground cover also exceeds 100% in many cases, which shouldn't be possible.

Let's take a closer look at that.

```{r}
reveg_var%>%
  dplyr::select(c(Location, Sublocation, Block, Treatment, Treatment_ID, t_year, Sphagnum:Lichen, Bare_peat:Temp_water, Other_veg, Total_veg, Field, Veg_Ground, Tot_Ground))%>%
  group_by(t_year, Location) %>%
 filter(Tot_Ground>120)
```

7 plots have higher ground cover than 120%. Most of this is due to overlap with mulch, and I have gone through the photos of each and double checked and altered any cover percentages that seemed a little wrong. All ok now.

### Exploring specific species groups

Creating long format of species functional groups:

```{r}
reveg_long <-reveg%>%
  pivot_longer(Sphagnum:Temp_water, names_to = 'functional_group', values_to = "cover")
```

Overlook of the various species groups in the reference plots:

```{r}
plot_ref <- reveg_long %>%
  filter(Treatment=='R') %>%
  ggplot() +   
  geom_boxplot()+   
  aes(x=reorder(functional_group, desc(cover), FUN = median), y=cover) +
  ylab("Cover of the various functional groups in the reference plots") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
  
plot_ref +  theme(legend.position="bottom")
```

The reference plots have a high cover of Sphagnum (about 71% mean), and a decent cover of Narthecium, heathers (eviggrønne busker) and Trichophorum. There's also some litter (about 14%ish), while Eriopherum covers only ca. 3%)

```{r}
mean_cover <- reveg_long %>%
  filter(Treatment == 'R') %>%
  group_by(functional_group) %>%
  summarise(mean_cover = mean(cover, na.rm = TRUE))
print(mean_cover)
```

The natural cover of Eriopherum is quite low, which is interesting to compare to the experimental plots, as this is a plant that increases rapidly in newly rewetted peatlands. In the experimental plots:

```{r}
plot_eri <- reveg_var %>%
  filter(!is.na(Eriopherum)) %>%  # Exclude the NA value
  ggplot() +   
  geom_boxplot()+   
  aes(x=Treatment, y=Eriopherum, color=as.factor(t_year)) +
  ylab("Eriopherum cover") +
  labs(color = "Growth seasons since treatment") +
  theme_bw()
plot_eri +  theme(legend.position="bottom")
```

```{r}
mean_cover_eri <- reveg %>%
  group_by(Treatment, t_year) %>%
  summarise(mean_cover = mean(Eriopherum, na.rm = TRUE),
            max_cover = max(Eriopherum, na.rm = TRUE))
print(mean_cover_eri)
```

The cover of Eriopherum is higher than in the reference plots in both C, M, and S after 3 years, if not by much. In some specific plots the cover is substantially higher than the references.

Checking if there are other groups that may be of interest in the experimental plots:

```{r}
plot_fun <- reveg_long %>%
  filter(Treatment!='R') %>%
  ggplot(aes(x=reorder(functional_group, desc(cover), FUN = median), y=cover)) +   
  geom_boxplot()+   
  ylab("Cover of the various functional groups in the reference plots") +
  xlab("Functional plant groups (and some other cover groups)") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  facet_wrap(~t_year, ncol = 1)
  
plot_fun +  theme(legend.position="bottom")
```

```{r}
plot_fun3 <- reveg_long %>%
  filter(Treatment!='R') %>%
  filter(t_year==3) %>%
  ggplot(aes(x=reorder(functional_group, desc(cover), FUN = median), y=cover)) +   
  geom_boxplot()+   
  ylab("Cover of the various functional groups in the reference plots") +
  xlab("Functional plant groups (and some other cover groups)") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
  
plot_fun3 +  theme(legend.position="bottom")
```

Most plots have still very little other vegetation than Sphagnum after 3 years.

Some plots have a very high cover of other types of mosses. Same goes for Eriopherum, Heathers and Polytrichum.

```{r}
plot_hea <- reveg_var %>%
  filter(!is.na(Heathers)) %>%  # Exclude the NA value
  ggplot() +   
  geom_boxplot()+   
  aes(x=Treatment, y=Heathers, color=as.factor(t_year)) +
  ylab("Heathers cover") +
  labs(color = "Growth seasons since treatment") +
  theme_bw()
plot_hea +  theme(legend.position="bottom")
```

There is an interesting increase in heathers within the Sphagnum treatments. This is also partly visible within the mulch plots. The means are still low, but several plots seem to have had a great development in heather cover within the time period. In contrast to the Eriopherum, the Heather cover is still not fully reaching the levels of the references after 3 years.
