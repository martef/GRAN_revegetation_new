---
title: "1.8 Data exploration Sphagnum species"
author: "MarteF"
format: html
editor: visual
---

## Packages needed

```{r}
library(tidyverse)
library(ggridges)
library(RColorBrewer)
library(scales)
```

## Upload and clean data

```{r}
reveg_var <- readr::read_delim('../data/reveg_var.csv', 
                       delim = ',',
                       locale = locale('se', encoding = 'ISO8859-1'),
                       col_names = TRUE)

reveg_var <- reveg_var %>% 
  select( -1) %>%
  mutate_at(c('year', 'month', 'Location', 'Sublocation', 'Block', 'Treatment_ID', 'Treatment', 'Name', 'Station_ID'), as.factor) %>%
  select('Date','year','month', 'Name','Location','Sublocation', 'Block', 'Treatment', 'Treatment_ID', 'Station_ID', everything())
```

```{r}
#Upload Sphagnum species dataset 
sph <- readr::read_delim('../data/Sphagnum.csv',                                    
                         delim = ';',                                   
                         col_names = TRUE)  
sph <- sph%>%   
  mutate_at(c('Sph_ang','Sph_pap', 'Sph_div','Sph_rus', 'Sph_fus','Sph_cf'), as.numeric) %>%   
  mutate_at(c(8:19), ~replace_na(.,0)) 

#Replacing NAs with zeros  
sph<- sph%>%   
  rename(Treatment_ID =Treatment) %>%     
  mutate(Treatment=case_when(Treatment_ID==c('S1','S2')~'S',                              
                             TRUE~'S'))  
sph<- sph%>%   
  mutate_at(c('Location','Sublocation','Block','Treatment_ID','Subplot','Microtopography'), as.factor)   
sph$Treatment <- as.factor(sph$Treatment)       
#Convert to date-format 
sph$Date <- dmy(sph$Date)  
#Create a year only column 
sph$year <-as.factor(year(sph$Date))  
#Create a column with year as 0,1 and 2 
sph <- sph %>%   
  mutate(t_year = case_when(year=="2020" & Location =="HM" ~ 0,                             
                            year=="2021" & Location =="HM" ~ 2,                             
                            year=="2022" & Location =="HM" ~ 3,                             
                            year=="2020" & Location =="VSM"  ~ 0,                             
                            year=="2021" & Location =="VSM" ~ 2,                             
                            year=="2022" & Location =="VSM" ~ 3,                             
                            year=="2021" & Location =="BSM" ~ 0,                             
                            year=="2022" & Location =="BSM" ~ 2,                             
                            year=="2023" & Location =="BSM" ~ 3,                             
                            year=="2023" & Location =="HM" ~ 3,                             
                            year=="2023" & Location =="VSM" ~ 3,     
                            TRUE ~ NA_real_   )) 

sph$t_year <-as.factor(sph$t_year)  
sph <- sph %>%    
  relocate(c(t_year, year, Date, Location, Sublocation, Block, Treatment))

sph_long <- sph %>%   
  pivot_longer(Sph_ang:Sph_cf, names_to = 'Sph_sp', values_to = "cover")  

# Replace underscores with spaces in the levels of the Sph_sp factor 
sph_long$Sph_sp <- as.factor(gsub("_", " ", as.character(sph_long$Sph_sp)))  

# calculate the proportion of each species' cover within the Total 
sph_long <- sph_long %>%   
  mutate(Proportion = cover / Total)

#It seems like there are no recordings of Sph_fus, so I'll remove this level from my dataset 
sph_long <- sph_long %>%   
  filter(!Sph_sp=="Sph fus")

#Reorder the Sphagnum species so that our experiment species will come first 
sph_long <- sph_long %>% 
  mutate(Sph_sp = fct_relevel(Sph_sp, "Sph ang", "Sph cap", "Sph pap", "Sph ten", "Sph bal", "Sph com", "Sph div", "Sph maj", "Sph rip", "Sph rus", "Sph cf", after = 0))  

```

```{r}
#Add full species names
sph_long <- sph_long %>%
  mutate(Species_full = recode(Sph_sp, 
    "Sph ang" = "S. angustifolium", 
    "Sph cap" = "S. capillifolium", 
    "Sph pap" = "S. papillosum", 
    "Sph ten" = "S. tenellum", 
    "Sph bal" = "S. balticum", 
    "Sph com" = "S. compactum", 
    "Sph div" = "S. divinum", 
    "Sph maj" = "S. majus",  
    "Sph rip" = "S. riparium", 
    "Sph rus" = "S. russowi", 
    "Sph cf" = "S. cf"))
```

```{r}
# Create subset with only year 3 data
sph_long_y3 <- sph_long %>%
  filter(t_year==3)
```

```{r}
# Function to calculate the standard error
se <- function(x) {
  sd(x, na.rm = TRUE) / sqrt(sum(!is.na(x)))
}

```

```{r}
str(sph_long_y3)
sph_long_y3$cover <- as.numeric(sph_long_y3$cover)

# Check variation within groups
sph_long_y3 %>%
  group_by(Location, Sph_sp, Species_full) %>%
  summarise(cover_sd = sd(cover, na.rm = TRUE),
            proportion_sd = sd(Proportion, na.rm = TRUE))

# Filter to one specific group to inspect
specific_group <- sph_long_y3 %>%
  filter(Location == "BSM" & Sph_sp == "Sph ang")

# Calculate manually
cover_mean <- mean(specific_group$cover, na.rm = TRUE)
cover_se <- se(specific_group$cover)

cover_mean
cover_se

```

```{r}
sph_long_agg <- sph_long_y3 %>%
  group_by(Location, Sph_sp, Species_full) %>%
  summarise(cover = mean(cover, na.rm = TRUE),
            se_cover = se(cover),
            proportion = mean(Proportion, na.rm = TRUE),
            se_prop = se(Proportion))

sph_long_agg
```

```{r}
# Calculate the standard error within each group before summarising
sph_long_agg <- sph_long_y3 %>%
  group_by(Location, Sph_sp, Species_full) %>%
  mutate(se_cover = se(cover),    # Calculate SE while still in grouped, non-aggregated state
         se_prop = se(Proportion)) %>%
  summarise(cover = mean(cover, na.rm = TRUE),
            se_cover = unique(se_cover),  # Use unique to keep SE value calculated earlier
            proportion = mean(Proportion, na.rm = TRUE),
            se_prop = unique(se_prop))

# Display the aggregated data
sph_long_agg
write.csv(sph_long_agg, file='summary_sph_species_location.csv')
```

```{r}
# Calculate the standard error within each group before summarising
sph_long_agg_sub <- sph_long_y3 %>%
  group_by(Location, Sublocation, Sph_sp, Species_full) %>%
  mutate(se_cover = se(cover),    # Calculate SE while still in grouped, non-aggregated state
         se_prop = se(Proportion)) %>%
  summarise(cover = mean(cover, na.rm = TRUE),
            se_cover = unique(se_cover),  # Use unique to keep SE value calculated earlier
            proportion = mean(Proportion, na.rm = TRUE),
            se_prop = unique(se_prop))

# Display the aggregated data
sph_long_agg_sub
write.csv(sph_long_agg_sub, file='summary_sph_species_sublocation.csv')
```

## Boxplots

```{r}
# Plot with rawdata
sph_plot <- sph_long %>%   
  ggplot(aes(x = Sph_sp, y = cover, color = Sph_sp)) +      
  geom_boxplot() +      
  theme_minimal() +        
  facet_wrap(. ~ t_year) +   
  theme(axis.title.x = element_blank(),         
        axis.text.x = element_blank(),         
        axis.ticks.x = element_blank()) +   
  labs(color = "Sphagnum species", y = "% cover")  
 
#ggsave(sph_plot, filename = "../figures/sphsp_boxplot.png")

print(sph_plot) 
```

```{r}
# Plot with year 3 data only
sph_plot_y3 <- sph_long_y3 %>%   
  ggplot(aes(x = Sph_sp, y = cover, color = Sph_sp)) +      
  geom_boxplot() +      
  theme_minimal() +        
  theme(axis.title.x = element_blank(),         
        axis.text.x = element_blank(),         
        axis.ticks.x = element_blank()) +   
  labs(color = "Sphagnum species", y = "% cover")  

 
#ggsave(sph_plot, filename = "../figures/sphsp_boxplot_y3.png")

print(sph_plot_y3) 
```

```{r}
# Plot with aggregated data
sph_plot_agg <- sph_long_agg %>%   
  ggplot(aes(x = Sph_sp, y = cover, color = Sph_sp)) +      
  geom_boxplot() +      
  theme_minimal() +        
  theme(axis.title.x = element_blank(),         
        axis.text.x = element_blank(),         
        axis.ticks.x = element_blank()) +   
  labs(color = "Sphagnum species", y = "% cover")  
 
#ggsave(sph_plot, filename = "../figures/sphsp_boxplot_y3_agg.png")

print(sph_plot_agg) 
```

```{r}
sph_plot2 <- sph_long %>%
  ggplot(aes(x=Treatment, y=cover, color=Sph_sp)) +
  geom_boxplot()+theme_minimal() +
  facet_grid(Location ~ Sublocation + t_year, space = "free") +
  theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())


#ggsave(sph_plot2, filename = "../figures/sphsp_sublocation_boxplot.png")
sph_plot2


```

```{r}
ggplot(sph_long, aes(x = t_year, y = Total)) +   
  geom_boxplot()+     
  theme_minimal() +   
  theme(axis.text.x = element_text(angle = 45, hjust = 1), 
        axis.title.x = element_blank()) +   
  facet_grid(Location ~ Sublocation, space = "free")
```

## Exploring the numbers

The numbers from the subplots indicate that they are not a perfect representation of the larger Sphagnum treatment plots.

```{r}
sph %>%   
  group_by(Location, Sublocation, t_year) %>%   
  summarise(mean = mean(Total))
```

```{r}
reveg_var %>%   
  filter(Treatment=="S") %>%   
  filter(t_year==3) %>%   
  group_by(Location, Sublocation) %>%   
  summarise(mean = mean(Sphagnum))
```

The mean total cover of Sphagnum within the subplots does in most cases look similar to the mean total cover within the Sphagnum treatments. But there are some very clear exceptions:

BSM1 has only HALF the cover in the subplots compared to the treatment plot as a whole.

BSM2 is about 20% lower within the subplots in year 3, while this is mostly similar in year 2.

Most of the others have slightly lower total cover in the subplots than in the treatment plots, but that may just be the resolution (it should be easier to be accurate within the subplots than within the treatment plot).

```{r}
sph %>%   
  filter(Location=="BSM" & Sublocation=="1" & Block=="4") %>%   
  group_by(Treatment_ID, t_year)
```

I can't pinpoint a specific block or anything like that that bring down the mean for BSM1, the numbers are just in total lower than the main treatment plots.\

```{r}
reveg %>%   
  filter(Location=="BSM" & Sublocation=="1" & Treatment=="S" & !t_year=="0") %>%   dplyr::select(Location, Sublocation, Block, Treatment, Treatment_ID, t_year, Sphagnum, Mulch, Bare_peat, Dead_sph) %>%   
  group_by(Block, Treatment_ID, t_year)
```

## Summary

```{r}
# Function to calculate the standard error
se <- function(x) {
  sd(x, na.rm = TRUE) / sqrt(sum(!is.na(x)))
}

# Summarize the data
summary <- reveg_long %>%
  group_by(functional_group, t_year, Treatment) %>%
  summarise(mean = mean(cover, na.rm = TRUE),
            median = median(cover, na.rm = TRUE),
            se = se(cover),
            max = max(cover, na.rm = TRUE),
            .groups = 'drop')

# Pivot the summary data to a wide format
summary_wide <- summary %>%
  pivot_wider(names_from = t_year, 
              values_from = c(mean, median, se, max), 
              names_glue = "{.value}_year_{t_year}")

# Explicitly order the columns
summary_wide <- summary_wide %>%
  select(functional_group, Treatment,
         mean_year_0, median_year_0, se_year_0, max_year_0,
         mean_year_2, median_year_2, se_year_2, max_year_2,
         mean_year_3, median_year_3, se_year_3, max_year_3)

# Print the final summary table
print(summary_wide)

write.csv(summary_wide, file='summary_FGTs.csv')
```

## Proportion of total Sphagnum cover

I want to test whether the Sphagnum species data would be better represented as proportions.

```{r}
# Plot 
sph_plot_prop <- sph_long %>%   
  ggplot(aes(x = Treatment, y = Proportion, color = Sph_sp)) +      
  geom_boxplot() +      
  theme_minimal() +        
  facet_wrap(. ~ t_year) +   
  theme(axis.title.x = element_blank(),         
        axis.text.x = element_blank(),         
        axis.ticks.x = element_blank()) +   
  labs(color = "Sphagnum species", y = "Proportion of /Sphagnum/ cover")  

# Print the plot 
print(sph_plot_prop)  
#ggsave(sph_plot_prop, filename = '../figures/sphsp_plot_prop.png"))
```

```{r}
sph_long%>%   
  group_by(Location, Sublocation, t_year, Sph_sp ) %>%   
  summarise(mean=mean(cover),             
            sd=sd(cover),             
            max=max(cover),             
            prop=mean(Proportion),             
            prop_max=max(Proportion),             
            sd_prop=sd(Proportion))
```

Summary of only year 3:

```{r}
sph_long%>%
  filter(t_year==3)%>%
  group_by(Location, Sublocation, Sph_sp ) %>%   
  summarise(mean=mean(cover),             
            sd=sd(cover),             
            max=max(cover),             
            prop=mean(Proportion),             
            prop_max=max(Proportion),             
            sd_prop=sd(Proportion))
```

```{r}
sph_summary <- sph_long %>%
  filter(t_year == 3) %>%
  group_by(Location, Sublocation, Block, Treatment_ID, Subplot) %>%
  summarise(total_cover_subplot = sum(cover)) %>% # Sum cover at the subplot level
  ungroup() %>%
  group_by(Location, Sublocation, Block, Treatment_ID) %>%
  summarise(mean_total_cover_treatment = mean(total_cover_subplot)) %>% # Mean total cover at the Treatment level
  ungroup() %>%
  group_by(Location, Sublocation, Block) %>%
  summarise(mean_total_cover_block = mean(mean_total_cover_treatment)) %>% # Mean total cover at the Block level
  ungroup() %>%
  group_by(Location, Sublocation) %>%
  summarise(mean_total_cover_sublocation = mean(mean_total_cover_block)) # Mean total cover at the Sublocation level

sph_summary
```

+----------+-------------+---------+
| Location | Sublocation | mean    |
|          |             |         |
| \<chr\>  | \<chr\>     | \<dbl\> |
+:=========+:============+========:+
| BSM      | 1           | 79.125  |
+----------+-------------+---------+
| BSM      | 2           | 93.250  |
+----------+-------------+---------+
| BSM      | 3           | 88.375  |
+----------+-------------+---------+
| HM       | 1           | 55.625  |
+----------+-------------+---------+
| HM       | 2           | 87.500  |
+----------+-------------+---------+
| HM       | 3           | 51.250  |
+----------+-------------+---------+
| VSM      | 1           | 28.750  |
+----------+-------------+---------+
| VSM      | 2           | 41.250  |
+----------+-------------+---------+

## Density plots

```{r}
# Specify the desired order of species
unique(sph_long$Sph_sp)
species_order <- c("Sph ang", "Sph cap", "Sph ten", "Sph pap", "Sph bal", "Sph com", "Sph div", 'Sph maj', 'Sph rip', 'Sph rus', 'Sph cf')
species_order <- rev(species_order)

# Make sure Sph_sp is a factor with the specified levels
sph_long$Sph_sp <- factor(sph_long$Sph_sp, levels = species_order)


```

```{r}
denplot <- ggplot(sph_long_y3, aes(x = cover, y = Sph_sp, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 2, alpha = 1,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Total percentage cover") +
  guides(fill = guide_legend(reverse = TRUE)) +
    scale_fill_brewer(palette="PuOr")


#ggsave(denplot, filename='../figures/densityplot_Sphsp.png')
print(denplot)
```

```{r}
denplot2 <- ggplot(sph_long_y3, aes(x = Proportion, y = Sph_sp, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 2, alpha = 1,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Proportion of Sphagnum cover") +
  guides(fill = guide_legend(reverse = TRUE)) +
  scale_fill_brewer(palette="PuOr")


#ggsave(denplot2, filename='../figures/densityplot_Sphsp_prop.png')
print(denplot2)
```

Let's try the same with the aggregated data per plot:

```{r}
denplot3 <- ggplot(sph_long_agg, aes(x = Proportion, y = Sph_sp, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 2, alpha = 1,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Proportion of Sphagnum cover") +
  guides(fill = guide_legend(reverse = TRUE)) +
  scale_fill_brewer(palette="PuOr")


#ggsave(denplot3, filename='../figures/densityplot_Sphsp_prop_agg.png')
print(denplot3)
```

```{r}
denplot4 <- ggplot(sph_long_agg, aes(x = cover, y = Sph_sp, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 2, alpha = 1,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Total percentage cover") +
  guides(fill = guide_legend(reverse = TRUE)) +
    scale_fill_brewer(palette="PuOr")


#ggsave(denplot4, filename='../figures/densityplot_Sphsp_agg.png')
print(denplot4)
```

I see that I might don't need to display all the "extra" species with very little coverage.

Let's try with new density plots with only the four experiment species and a few other adjustments.

```{r}
sph_long_agg_ex <- sph_long_agg %>%
  filter(Sph_sp %in% c('Sph ang', 'Sph cap', 'Sph pap', 'Sph ten'))
```

```{r}
denplot5 <- ggplot(sph_long_agg_ex, aes(x = cover, y = Sph_sp, fill = ..x.., group = Sph_sp)) + 
  geom_density_ridges_gradient(
    quantile_lines = TRUE, scale = 3, alpha = 0.5,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Total percentage cover") +
  scale_fill_viridis_c(option='C') +
  theme(legend.position = "none",
  axis.title.y = element_text(margin = margin(r = 15)),
   axis.title.x = element_text(margin = margin(t = 10))) # Adjust margin of y-xis title

#ggsave(denplot5, filename='../figures/densityplot_Sphsp_agg_ex.png')
print(denplot5)
```

```{r}
denplot6 <- ggplot(sph_long_agg_ex, aes(x = cover, y = Species_full, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 2, alpha = 0.8,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Total percentage cover") +
  scale_fill_brewer(palette="PuOr") +
  theme(legend.position = "none",
  axis.title.y = element_text(margin = margin(r = 15)),
   axis.title.x = element_text(margin = margin(t = 10))) # Adjust margin of y-xis title

ggsave(denplot6, filename='../figures/densityplot_Sphsp_agg_ex.png')
print(denplot6)
```

```{r}
denplot7 <- ggplot(sph_long_agg_ex, aes(x = Proportion, y = Species_full, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 3, alpha = 0.9,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Proportion of Sphagnum cover") +
  scale_fill_brewer(palette="PuOr") +
  theme(legend.position = "none",
  axis.title.y = element_text(margin = margin(r = 15)),
   axis.title.x = element_text(margin = margin(t = 10))) # Adjust margin of y-xis title

ggsave(denplot7, filename='../figures/densityplot_Sphsp_agg_ex_prop.png')
print(denplot7)
```

```{r}
denplot8 <- ggplot(sph_long_agg_ex, aes(x = Proportion, y = Sph_sp, fill = ..x.., group = Sph_sp)) + 
  geom_density_ridges_gradient(
    quantile_lines = TRUE, quantiles = 2, scale = 2, alpha = 0.5,
    vline_width = 0.5, vline_color = "black", rel_min_height = 0.01,
    color = "black") +  # Adjust outline color and size) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Total percentage cover") +
  scale_fill_gradientn(
    colors = c("blue", "green", "yellow", "red"),
    values = rescale(c(0.2, 0.40, 0.6, 0.80)),
    limits = c(0, 1)
  ) +
  theme(legend.position = "none",
  axis.title.y = element_text(margin = margin(r = 15)),
   axis.title.x = element_text(margin = margin(t = 10))) # Adjust margin of y-xis title

#ggsave(denplot8, filename='../figures/densityplot_Sphsp_agg_ex_prop2.png')
print(denplot8)
```

Nah, I can't really get this gradient fill to work in an aesthetic way. I'll stick with version 7.

## Save datasets

```{r}
# write.csv (sph, file='../data/Sph.sp.csv')
# write.csv (sph_long, file='../data/Sph.sp.long.csv')
```

## Density plots per location and sublocation

```{r}
denplot_loc <- ggplot(sph_long_agg_ex, aes(x = Proportion, y = Species_full, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 3, alpha = 0.9,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Proportion of Sphagnum cover") +
  scale_fill_brewer(palette="PuOr") +
   facet_wrap(~ Location) +  # Facet by location
  theme(legend.position = "none",
  axis.title.y = element_text(margin = margin(r = 15)),
   axis.title.x = element_text(margin = margin(t = 10))) # Adjust margin of y-xis title

ggsave(denplot_loc, filename='../figures/densityplot_Sphsp_agg_ex_prop_loc.png', height = 9, width = 12, unit="cm")
print(denplot_loc)
```

```{r}
denplot_loc2 <- ggplot(sph_long_agg_ex, aes(x = cover, y = Species_full, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 3, alpha = 0.9,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Cover of Sphagnum cover") +
  scale_fill_brewer(palette="PuOr") +
   facet_wrap(~ Location) +  # Facet by location
  theme(legend.position = "none",
  axis.title.y = element_text(margin = margin(r = 15)),
   axis.title.x = element_text(margin = margin(t = 10))) # Adjust margin of y-xis title

ggsave(denplot_loc2, filename='../figures/densityplot_Sphsp_agg_ex_loc.png')
print(denplot_loc2)
```

```{r}
sph_long_agg_ex <- sph_long_agg_ex %>%
  mutate(Location_Sublocation = paste(Location, Sublocation, sep = "-"))

denplot_subloc <- ggplot(sph_long_agg_ex, aes(x = Proportion, y = Species_full, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 3, alpha = 0.9,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Proportion of Sphagnum cover") +
  scale_fill_brewer(palette="PuOr") +
   facet_wrap(~ Location_Sublocation) +  # Facet by location
  theme(legend.position = "none",
  axis.title.y = element_text(margin = margin(r = 15)),
   axis.title.x = element_text(margin = margin(t = 10))) # Adjust margin of y-xis title

ggsave(denplot_loc, filename='../figures/densityplot_Sphsp_agg_ex_prop_loc.png')
print(denplot_subloc)
```

```{r}

denplot_subloc2 <- ggplot(sph_long_agg_ex, aes(x = cover, y = Species_full, fill = Sph_sp)) + 
  geom_density_ridges(
    quantile_lines = TRUE, scale = 3, alpha = 0.9,
    vline_width = 0.2, vline_color = "black", rel_min_height = 0.01) +
  theme_minimal() +
  labs(y = "Sphagnum species", x = "Cover of Sphagnum cover") +
  scale_fill_brewer(palette="PuOr") +
   facet_wrap(~ Location_Sublocation) +  # Facet by location
  theme(legend.position = "none",
  axis.title.y = element_text(margin = margin(r = 15)),
   axis.title.x = element_text(margin = margin(t = 10))) # Adjust margin of y-xis title

ggsave(denplot_loc, filename='../figures/densityplot_Sphsp_agg_ex_loc.png')
print(denplot_subloc2)
```
